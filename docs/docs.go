// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
   "schemes": {{ marshal .Schemes }},
   "swagger": "2.0",
   "info": {
       "description": "{{.Description}}",
       "title": "{{.Title}}",
       "contact": {},
       "version": "{{.Version}}"
   },
   "host": "{{.Host}}",
   "basePath": "{{.BasePath}}",
   "paths": {
       "/users": {
           "get": {
               "description": "Get all user's info",
               "consumes": [
                   "application/json"
               ],
               "produces": [
                   "application/json"
               ],
               "summary": "Get all users",
               "responses": {
                   "200": {
                       "description": "OK",
                       "schema": {
                           "$ref": "#/definitions/model.User"
                       }
                   }
               }
           },
           "post": {
               "description": "Create new user",
               "consumes": [
                   "application/json"
               ],
               "produces": [
                   "application/json"
               ],
               "summary": "Create user",
               "parameters": [
                   {
                       "description": "body of the user",
                       "name": "user",
                       "in": "body",
                       "required": true,
                       "schema": {
                           "$ref": "#/definitions/api.UserDto"
                       }
                   }
               ],
               "responses": {
                   "201": {
                       "description": "Created",
                       "schema": {
                           "allOf": [
                               {
                                   "$ref": "#/definitions/api.ApiResult"
                               },
                               {
                                   "type": "object",
                                   "properties": {
                                       "result": {
                                           "$ref": "#/definitions/model.User"
                                       }
                                   }
                               }
                           ]
                       }
                   }
               }
           },
           "patch": {
               "description": "Get user's info",
               "consumes": [
                   "application/json"
               ],
               "produces": [
                   "application/json"
               ],
               "summary": "Update user",
               "parameters": [
                   {
                       "description": "body of the user",
                       "name": "name",
                       "in": "body",
                       "required": true,
                       "schema": {
                           "$ref": "#/definitions/model.User"
                       }
                   }
               ],
               "responses": {
                   "201": {
                       "description": "Created",
                       "schema": {
                           "$ref": "#/definitions/model.User"
                       }
                   }
               }
           }
       },
       "/users/{id}": {
           "get": {
               "description": "Get user's info",
               "consumes": [
                   "application/json"
               ],
               "produces": [
                   "application/json"
               ],
               "summary": "Get user",
               "parameters": [
                   {
                       "type": "string",
                       "description": "id of the user",
                       "name": "id",
                       "in": "path",
                       "required": true
                   }
               ],
               "responses": {
                   "200": {
                       "description": "OK",
                       "schema": {
                           "$ref": "#/definitions/model.User"
                       }
                   }
               }
           },
           "delete": {
               "description": "Delete user's info",
               "consumes": [
                   "application/json"
               ],
               "produces": [
                   "application/json"
               ],
               "summary": "Delete user",
               "parameters": [
                   {
                       "type": "string",
                       "description": "id of the user",
                       "name": "id",
                       "in": "path",
                       "required": true
                   }
               ],
               "responses": {
                   "204": {
                       "description": "No Content",
                       "schema": {
                           "$ref": "#/definitions/model.User"
                       }
                   }
               }
           }
       }
   },
   "definitions": {
       "api.ApiError": {
           "type": "object",
           "properties": {
               "code": {
                   "type": "integer"
               },
               "details": {
                   "type": "object"
               },
               "message": {
                   "type": "string"
               }
           }
       },
       "api.ApiResult": {
           "type": "object",
           "properties": {
               "error": {
                   "$ref": "#/definitions/api.ApiError"
               },
               "result": {
                   "type": "object"
               },
               "success": {
                   "type": "boolean"
               }
           }
       },
       "api.UserDto": {
           "type": "object",
           "properties": {
               "name": {
                   "type": "string"
               }
           }
       },
       "model.User": {
           "type": "object",
           "properties": {
               "createdAt": {
                   "type": "string"
               },
               "deletedAt": {
                   "type": "string"
               },
               "id": {
                   "type": "integer"
               },
               "name": {
                   "type": "string"
               },
               "updatedAt": {
                   "type": "string"
               }
           }
       }
   }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "localhost:8395",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "Platform-sample Swagger API",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
